@page "/"

<style>

        html {
            background: @(DebugMode ? "" : "url(Assets/bezel.png) no-repeat center center fixed");
            -webkit-background-size: cover;
            -moz-background-size: cover;
            -o-background-size: cover;
            background-size: cover;
        }
        body {
            background-color: @(DebugMode ? "white" : "black");
        }

        .content {
            padding: 0px !important;
        }

        div.context.px-4 {
            padding: 0px !important;
        }

        .main > div {
            padding: 0px !important;
        }

        #theCanvas canvas {
            display: block;
            width: 100%;
            height: 100%;
            position: absolute;
            cursor: @(DebugMode ? "auto" : "none");
        }

            #theCanvas canvas:first-child {
                z-index: 1;
                cursor: @(DebugMode ? "auto" : "none");
            }

            #theCanvas canvas:last-child {
                z-index: 1000;
                cursor: @(DebugMode ? "auto" : "none");
            }

        .twinkle {
            background: transparent url('Assets/twinkling.png') repeat top center;
            display: block;
            width: 100%;
            height: 100%;
            position: absolute;
            z-index: -50;
            -webkit-animation: move-twink-back 90s linear infinite;
            -moz-animation: move-twink-back 90s linear infinite;
            -o-animation: move-twink-back 90s linear infinite;
            animation: move-twink-back 90s linear infinite;
        }

        .background {
            display: block;
            width: 100%;
            height: 100%;
            position: absolute;
            background-image: url('Assets/Background.png');
            z-index: -100;
        }

        .backgroundmoving {
            -webkit-animation: animatedBackground 5s linear infinite;
            -moz-animation: animatedBackground 5s linear infinite;
            -o-animation: animatedBackground 5s linear infinite;
            animation: animatedBackground 5s linear infinite;
        }

        #divBufferCanvas canvas {
            background-color: black;
            display: block;
        }

        #divBigBufferCanvas canvas {
            background-color: black;
            display: block;
        }

        #divBiggerBufferCanvas canvas {
            background-color: black;
            display: block;
        }

        body {
            overflow-y: hidden; /* Hide vertical scrollbar */
            overflow-x: hidden; /* Hide horizontal scrollbar */
        }
</style>

<div id="divDebug" style="@(DebugMode ? "visibility:visible" : "visibility:hidden")">
    <div id="divDebugDash" style="position:absolute;left:15px;top:15px;width:300px;height:250px;background-color:lightgray;padding:5px;font-size:10px;font-size:10px">
        <input type="checkbox" id="PauseAnimation" />
        <label for="PauseAnimation">Pause Animation</label>
        <br />
        <input type="checkbox" id="EditCurves" />
        <label for="EditCurves">Edit Curves</label>
        <br />
        <button id="btnKillAllBugs">Kill Bugs</button>
        <br /><br />
        <button id="btnCaptureShip">Capture Ship</button>
        <br /><br />
        <button id="btnMorphBug">Morph Bug</button>
        <br /><br />
        <button id="btnResetAnimation">Reset Animation</button>
        <br /><br />
    </div>

    <div id="divDiagnostics" style="position:absolute;left:15px;top:290px;width:300px;height:700px;background-color:lightgray;padding:5px;font-size:10px;font-size:10px;overflow:scroll">
    </div>

    <div id="divBufferCanvas" style="position:absolute;right:0px;top:15px;opacity:1">
        @if (BufferCanvases != null && BufferCanvases.Count > 0)
        {
            @foreach (var canvas in BufferCanvases)
            {
                <BECanvas Width="@canvas.Width" Height="@canvas.Height" @ref="@canvas.CanvasRef"></BECanvas>
            }
        }
    </div>
    <div id="divBigBufferCanvas" style="position:absolute;right:50px;top:15px;opacity:1">
        @if (BigBufferCanvases != null && BigBufferCanvases.Count > 0)
        {
            @foreach (var canvas in BigBufferCanvases)
            {
                <BECanvas Width="@canvas.Width" Height="@canvas.Height" @ref="@canvas.CanvasRef"></BECanvas>
            }
        }
    </div>
    <div id="divBiggerBufferCanvas" style="position:absolute;right:150px;top:15px;opacity:1">
        @if (BiggerBufferCanvases != null && BiggerBufferCanvases.Count > 0)
        {
            @foreach (var canvas in BiggerBufferCanvases)
            {
                <BECanvas Width="@canvas.Width" Height="@canvas.Height" @ref="@canvas.CanvasRef"></BECanvas>
            }
        }
    </div>
</div>

<div id="theCanvas" style="position: fixed; opacity: 1; background-color: black; width: 100%; height: 100%;">
    <BECanvas Width="672" Height="944" @ref="DynamicCanvas1"></BECanvas>
    <BECanvas Width="672" Height="944" @ref="StaticCanvas"></BECanvas>
    <div class="twinkle"></div>
    <div class="@BackGroundClass"></div>
</div>

<img id="imgSpriteSheet" style="display:none" @ref="spriteSheet" src="Assets/spritesheet.png" />
<img id="imgBlazor" style="display:none" @ref="blazorImage" src="Assets/blazor.png" />
<div style="font-family: PressStart2P; height:0px">.</div>
